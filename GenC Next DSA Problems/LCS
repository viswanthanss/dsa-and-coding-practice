import java.util.*;

class Solution {
    public int lengthOfLongestSubstring(String s) {
        HashSet<Character> set = new HashSet<>();
        int left = 0;
        int maxLength = 0;

        for (int i = 0; i < s.length(); i++) {
            // Remove characters until duplicate is gone
            while (set.contains(s.charAt(i))) {
                set.remove(s.charAt(left));
                left++;
            }

            // Add new character
            set.add(s.charAt(i));

            // Calculate current valid substring length
            int length = i - left + 1;
            maxLength = Math.max(maxLength, length);
        }

        return maxLength;
    }
}
